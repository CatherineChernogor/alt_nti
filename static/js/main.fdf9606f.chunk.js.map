{"version":3,"sources":["components/high_gen/Auth.js","style/style.js","components/high_gen/fGround_comp/Navigation.js","components/high_gen/fGround_comp/NavMenu.js","components/high_gen/fGround_comp/Message.js","components/high_gen/fGround_comp/Chat.js","components/high_gen/fGround_comp/Bar.js","components/high_gen/fGround_comp/Circle.js","components/high_gen/fGround_comp/Points.js","components/high_gen/fGround_comp/Notification.js","components/high_gen/fGround_comp/Line.js","components/low_gen/Table.js","components/low_gen/Task.js","components/low_gen/Info.js","components/high_gen/Main.js","components/high_gen/Header.js","components/high_gen/Footer.js","components/static/Requests.js","App.js","serviceWorker.js","index.js"],"names":["Auth","onSubmitHandler","props","sendPost","username","state","password","onChangeField","event","target","name","value","setState","this","className","type","onChange","to","onClick","React","Component","style","txt4circle","font","title","marginTop","task","heading","subHeading","text","upperElement","zIndex","lowerElement","unabledElement","NavItemTask","path","id","key","NavItemInfo","Navigation","taskArray","contest","data","tasks","map","el","task_type","NavMenu","openMenuBox","menu","closeMenuBox","renderMenu","renderBtn","Message","content","time","date","Chat","openChatBox","chat","closeChatBox","renderChat","messages","messageArray","notifications","Bar","backgroundColor","color","width","height","position","Circle","num","x","showScore","Points","countProgress","score","maxScore","Math","ceil","countTime","maxTime","countScore","where","what","which","forEach","progress","date_start","duration","Notification","openNotPanel","notification","closeNotPanel","renderBox","msg","Line","dateCleaner","split","renderRight","result","renderWrong","error","Table","answerArray","answers","date_send","Task","Info","Main","handler","setTimeout","routeArray","exact","render","component","Header","Footer","server","token","auth","sendRequest","method","request","XMLHttpRequest","responseType","open","setRequestHeader","addEventListener","readyState","status","answ","response","send","JSON","stringify","onload","App","from","sendGet","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"4WA+CeA,E,YA1Cb,aAAe,IAAD,8BACZ,+CAOFC,gBAAkB,WAChB,EAAKC,MAAMC,SAAS,cAAe,CACjCC,SAAU,EAAKC,MAAMD,SACrBE,SAAU,EAAKD,MAAMC,YAXX,EAgBdC,cAAgB,SAACC,GAAW,IAAD,EACDA,EAAMC,OAAtBC,EADiB,EACjBA,KAAMC,EADW,EACXA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,KAhBxB,EAAKN,MAAQ,CACXD,SAAU,OACVE,SAAU,cAJA,E,sEAoBJ,IAAD,EACwBO,KAAKR,MAA5BD,EADD,EACCA,SAAUE,EADX,EACWA,SAElB,OACE,yBAAKQ,UAAU,QAEb,0BAAMA,UAAU,2BAEd,2BAAOC,KAAK,OAAOJ,MAAOP,EAAUU,UAAU,QAAQJ,KAAK,WAAWM,SAAUH,KAAKN,gBACrF,2BAAOQ,KAAK,WAAWJ,MAAOL,EAAUQ,UAAU,QAAQJ,KAAK,WAAWM,SAAUH,KAAKN,gBAGzF,kBAAC,IAAD,CAASU,GAAG,YAAYH,UAAU,iBAChC,2BAAOC,KAAK,SAASJ,MAAM,iCAAQG,UAAU,gBAAgBI,QAASL,KAAKZ,yB,GAlCpEkB,IAAMC,WC4BVC,G,MA/BD,CAEVC,WAAY,CACRC,KAAM,uCAEVC,MAAO,CACHC,UAAW,QAEfC,KAAM,CACFD,UAAW,QAEfE,QAAS,CACLJ,KAAM,qCAEVK,WAAY,CACRL,KAAM,qCAEVM,KAAM,CACFN,KAAM,qCAEVO,aAAa,CACTC,OAAQ,QAEZC,aAAa,CACTD,OAAQ,MAEZE,eAAe,CACXF,OAAQ,OCxBVG,EAAc,SAAChC,GAEjB,IAAIiC,EAAO,WAAajC,EAAMkC,GAC9B,OACI,wBAAIC,IAAKnC,EAAMkC,IAAI,kBAAC,IAAD,CAASnB,GAAIkB,GAAOjC,EAAMQ,MAA7C,MAGF4B,EAAc,SAACpC,GAEjB,IAAIiC,EAAO,WAAajC,EAAMkC,GAC9B,OACI,wBAAIC,IAAKnC,EAAMkC,IAAI,kBAAC,IAAD,CAASnB,GAAIkB,GAAb,gEAAnB,MAyBOI,E,iLAlBP,IAEIC,EAFQ3B,KAAKX,MAAMG,MAAMoC,QAAQC,KAAK,GAAGC,MAEvBC,KAClB,SAACC,GAAD,OACqB,IAAjBA,EAAGC,UACC,kBAAC,EAAD,CAAaT,IAAKQ,EAAGT,GAAI1B,KAAMmC,EAAGrB,MAAOY,GAAIS,EAAGT,KAC9C,kBAAC,EAAD,CAAaC,IAAKQ,EAAGT,GAAI1B,KAAMmC,EAAGrB,MAAOY,GAAIS,EAAGT,QAE9D,OACI,wBAAItB,UAAU,iBACT0B,O,GAbQrB,IAAMC,WCwChB2B,E,YApDX,aAAe,IAAD,8BACV,+CAGJC,YAAc,WACV,EAAKpC,SAAS,CAAEqC,MAAM,KALZ,EAOdC,aAAe,WACX,EAAKtC,SAAS,CAAEqC,MAAM,KARZ,EAUdE,WAAa,WACT,OACI,yBAAKrC,UAAU,UAEX,yBACIA,UAAU,cACVO,MAAOA,EAAMW,eAGjB,yBACIlB,UAAU,UACVO,MAAOA,EAAMS,cAEb,4BACIhB,UAAU,+BACVI,QAAS,EAAKgC,cAFlB,gBAKA,kBAAC,EAAD,CAAY7C,MAAO,EAAKH,MAAMG,WA5BhC,EAiCd+C,UAAY,WACR,OACI,yBACItC,UAAU,oBACVO,MAAOA,EAAMY,eACbf,QAAS,EAAK8B,eApCtB,EAAK3C,MAAQ,CAAE4C,MAAM,GAFX,E,sEA4CV,OAAIpC,KAAKR,MAAM4C,KACJpC,KAAKsC,aAELtC,KAAKuC,gB,GAhDFjC,IAAMC,WCMbiC,MATf,SAAiBnD,GACb,OACI,yBAAKY,UAAU,sBAAsBuB,IAAKnC,EAAMkC,IAC5C,yBAAKtB,UAAU,6BAA6BZ,EAAMoD,SAClD,yBAAKxC,UAAU,uBAAuBZ,EAAMqD,KAAO,IAAMrD,EAAMsD,QCmD5DC,E,YAhDX,aAAe,IAAD,8BACV,+CAGJC,YAAc,WACV,EAAK9C,SAAS,CAAE+C,MAAM,KALZ,EAOdC,aAAe,WACX,EAAKhD,SAAS,CAAE+C,MAAM,KARZ,EAUdE,WAAa,SAACC,GAEV,IAAIC,EAAeD,EAASlB,KACxB,SAACC,GAAD,OAAO,kBAAC,EAAD,CAASR,IAAKQ,EAAGT,GAAIkB,QAAST,EAAGhB,KAAM2B,KAAMX,EAAGT,GAAImB,KAAMV,EAAGT,QAGxE,OACI,yBAAKtB,UAAU,wBACX,4BACIA,UAAU,+BACVI,QAAS,EAAK0C,cAFlB,gBAKAG,IAvBE,EA4BdX,UAAY,WACR,OACI,yBACItC,UAAU,oBACVO,MAAOA,EAAMY,eACbf,QAAS,EAAKwC,eA/BtB,EAAKrD,MAAQ,CAAEsD,MAAM,GAFX,E,sEAuCV,IAAIG,EAASjD,KAAKX,MAAMG,MAAM2D,cAActB,KAC5C,OAAI7B,KAAKR,MAAMsD,KACJ9C,KAAKgD,WAAWC,GAEhBjD,KAAKuC,gB,GA7CLjC,IAAMC,W,MCcV6C,MAnBf,SAAa/D,GAET,OACI,yBAAKY,UAAU,iCACX,yBAAKO,MAAO,CACR6C,gBAAiBhE,EAAMiE,MACvBC,MAAqB,EAAdlE,EAAMkE,MAAU,KACvBC,OAAQ,UAEZ,yBAAKhD,MAAO,CACRiD,SAAU,UACV7C,UAAW,UAEVvB,EAAMoD,WCaRiB,MAxBf,SAAgBrE,GAcZ,OACI,yBAAKY,UAAU,sBACX,yBAAKO,MAAOA,EAAMC,YAd1B,SAAmBkD,GAEf,IAAIC,EAAID,EAAM,GACd,OAAU,IAANC,GAAmB,KAARD,EACHA,EAAM,kCACA,IAANC,GAAiB,IAANA,GAAiB,IAANA,GAAqB,KAARD,GAAsB,KAARA,GAAsB,KAARA,EAG/DA,EAAM,wCAFNA,EAAM,kCASbE,CAAUxE,EAAMoD,YCkDdqB,E,YA9DX,aAAe,IAAD,8BACV,+CASJC,cAAgB,SAACC,EAAOC,GACpB,OAAOC,KAAKC,KAAKH,EAAQC,EAAW,MAX1B,EAcdG,UAAY,SAAC1B,EAAM2B,GAEf,OAAO,IAhBG,EAmBdC,WAAa,SAACC,EAAOC,EAAMC,GACvB,IAAIT,EAAQ,EACZO,EAAMG,SAAQ,SAAA1C,GACVgC,GAAShC,EAAGwC,MAEhB,EAAKzE,SAAL,eAAiB0E,EAAQT,KAtBzB,EAAKxE,MAAQ,CAETwE,MAAO,GACPC,SAAU,GACVvB,KAAM,QACN2B,QAAS,SAPH,E,iFA4BV,IAAIzC,EAAU5B,KAAKX,MAAMG,MAAMoC,QAAQC,KAAK,GACxC8C,EAAW3E,KAAKX,MAAMG,MAAMsC,MAAMD,KAEtC7B,KAAKsE,WAAWK,EAAU,WAAY,SACtC3E,KAAKsE,WAAW1C,EAAQE,MAAO,SAAU,YAExBF,EAAQgD,WACbhD,EAAQiD,W,+BAKpB,OACI,yBAAK5E,UAAU,UACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIsD,MAAOvD,KAAK+D,cAAc/D,KAAKR,MAAMwE,MAAOhE,KAAKR,MAAMyE,UACvDX,MAAM,UACNb,QAAS,sDAAgBzC,KAAK+D,cAAc/D,KAAKR,MAAMwE,MAAOhE,KAAKR,MAAMyE,UAAY,MAEzF,kBAAC,EAAD,CACIV,MAAOvD,KAAKoE,UAAUpE,KAAKR,MAAMkD,KAAM1C,KAAKR,MAAM6E,SAClDf,MAAM,UACNb,QAASzC,KAAKR,MAAMkD,QAG5B,kBAAC,EAAD,CACID,QAASzC,KAAKR,MAAMwE,a,GAzDnB1D,IAAMC,WCgDZuE,E,YAjDX,aAAe,IAAD,8BACV,+CAIJC,aAAe,WACX,EAAKhF,SAAS,CAAEiF,cAAc,KANpB,EAQdC,cAAgB,WACZ,EAAKlF,SAAS,CAAEiF,cAAc,KATpB,EAYdzC,UAAY,WACR,OACI,4BACItC,UAAU,mBACVO,MAAOA,EAAMY,eACbf,QAAS,EAAK0E,gBAjBZ,EAsBdG,UAAY,WACR,OACI,yBAAKjF,UAAU,0BACX,yBACIA,UAAU,cACVO,MAAOA,EAAMW,eAGjB,yBACIlB,UAAU,UACVO,MAAOA,EAAMS,cACb,4BAAQhB,UAAU,oBAAoBI,QAAS,EAAK4E,gBACpD,yBAAKhF,UAAU,wBAAwBkF,MAhCnD,EAAK3F,MAAQ,CAAEwF,cAAc,GAFnB,E,sEAyCV,OAAIhF,KAAKR,MAAMwF,aACJhF,KAAKkF,YAELlF,KAAKuC,gB,GA9CGjC,IAAMC,WAsD7B4E,EAAM,ouBCjBKC,G,iNApCXC,YAAc,SAAC1C,GAEX,IAAId,EAAMc,EAAK2C,MAAM,KACjB5C,EAAOb,EAAK,GAIhB,OAFAa,GAAQ,MADRb,EAAOA,EAAK,GAAGyD,MAAM,KAAK,IACN,M,EAKxBC,YAAc,SAAClG,GACX,OACI,wBAAImC,IAAKnC,EAAMkC,IACX,wBAAItB,UAAU,cAAd,UAA+B,EAAKoF,YAAYhG,EAAMsD,OAAtD,OAA8DtD,EAAM2B,OACpE,wBAAIf,UAAU,UAAUZ,EAAMmG,U,EAI1CC,YAAc,SAACpG,GACX,OACI,4BACI,wBAAIY,UAAU,cAAd,UAA+B,EAAKoF,YAAYhG,EAAMsD,OAAtD,OAA8DtD,EAAMqG,QACpE,wBAAIzF,UAAU,UAAd,O,wEAKR,OAAwB,MAApBD,KAAKX,MAAMqG,MACJ1F,KAAKuF,YAAYvF,KAAKX,OAGtBW,KAAKyF,YAAYzF,KAAKX,W,GAjCtBiB,IAAMC,YCiCVoF,E,iLA7BP,IACIC,EADU5F,KAAKX,MAAMG,MAAMqG,QAAQhE,KACbE,KACtB,SAACC,GAAD,OACgB,MAAZA,EAAG0D,MACC,kBAAC,EAAD,CAAMlE,IAAKQ,EAAGT,GAAIP,KAAMgB,EAAGH,KAAMc,KAAMX,EAAG8D,UAAWJ,MAAO,KAAMF,OAAQxD,EAAGwD,SAC3E,kBAAC,EAAD,CAAMhE,IAAKQ,EAAGT,GAAIP,KAAM,KAAM2B,KAAMX,EAAG8D,UAAWJ,MAAO1D,EAAG0D,MAAOF,OAAQxD,EAAGwD,YAE5F,OACI,6BACI,6BACA,6BACA,6BACA,6BACA,6BACA,2BAAOvF,UAAU,iBACb,+BACI,4BACI,0EACA,+DAGH2F,S,GAvBLtF,IAAMC,WCWXwF,E,iLAVP,OACI,6BACI,yBAAK9F,UAAU,kBAAkBD,KAAKX,MAAMsB,OAC5C,yBAAKV,UAAU,oBAAoBD,KAAKX,MAAM2B,MAC9C,kBAAC,EAAD,CAAOxB,MAAOQ,KAAKX,MAAMG,a,GANtBc,IAAMC,WCSVyF,E,iLATP,OACA,yBAAK/F,UAAU,QACX,yBAAKA,UAAU,kBAAkBD,KAAKX,MAAMsB,OAC5C,yBAAKV,UAAU,eAAeD,KAAKX,MAAM2B,W,GALlCV,IAAMC,WCwDV0F,E,2MA3CbC,QAAU,a,mFAQRC,WAAWnG,KAAKkG,QAAS,O,+BAGjB,IAAD,OAGHE,EADOpG,KAAKX,MAAMG,MAAMsC,MAAMD,KACXE,KACrB,SAACC,GAAD,OACwB,IAAtBA,EAAGnB,KAAKoB,UACN,kBAAC,IAAD,CACEoE,OAAK,EAAC/E,KAAM,WAAaU,EAAGT,GAC5B+E,OAAQ,kBAAM,kBAAC,EAAD,CAAM3F,MAAOqB,EAAGnB,KAAKF,MAAOK,KAAMgB,EAAGnB,KAAKG,KAAMxB,MAAO,EAAKH,MAAMG,WAChF,kBAAC,IAAD,CACA6G,OAAK,EAAC/E,KAAM,WAAaU,EAAGT,GAC5B+E,OAAQ,kBAAM,kBAAC,EAAD,CAAM3F,MAAOqB,EAAGnB,KAAKF,MAAOK,KAAMgB,EAAGnB,KAAKG,aAEhE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAASxB,MAAOQ,KAAKX,MAAMG,QAC3B,kBAAC,EAAD,CAAMA,MAAOQ,KAAKX,MAAMG,QACxB,kBAAC,EAAD,MACA,yBAAKS,UAAU,gBACb,kBAAC,EAAD,CAAQT,MAAOQ,KAAKX,MAAMG,QACzB4G,EAED,kBAAC,IAAD,CAAO9E,KAAK,UAAUgF,OAAQ,eAC9B,kBAAC,IAAD,CAAOD,OAAK,EAAC/E,KAAK,UAAUiF,UAAWP,W,GAtChC1F,IAAMC,WCJViG,EANA,kBACX,gCACQ,yBAAKvG,UAAU,WCIZwG,MANf,WACI,OACI,kCCLGjH,EAAQ,CACjBkH,OAAQ,6BACRC,MAAO,2CACPC,KAAM,CACJrH,SAAU,OACVE,SAAU,cAEZqC,MAAO,CACL,KAAQ,CACN,CACE,GAAM,EACN,KAAQ,CACN,GAAM,EACN,WAAc,EACd,UAAa,EACb,MAAS,+CACT,KAAQ,u3DACR,OAAU,IAEZ,SAAY,GAEd,CACE,GAAM,EACN,KAAQ,CACN,GAAM,EACN,WAAc,EACd,UAAa,EACb,MAAS,+CACT,KAAQ,2/EACR,OAAU,IAEZ,SAAY,MAIlBF,QAAS,CACP,KAAQ,CACN,CACE,GAAM,EACN,KAAQ,cACR,SAAY,WACZ,WAAc,uBACd,MAAS,CACP,CACE,GAAM,EACN,WAAc,EACd,UAAa,EACb,MAAS,+CACT,KAAQ,2/EACR,OAAU,IAEZ,CACE,GAAM,EACN,WAAc,EACd,UAAa,EACb,MAAS,+CACT,KAAQ,2/EACR,OAAU,QAMpBiE,QAAS,CACP,KAAQ,CACN,CACE,GAAM,EACN,OAAU,GACV,KAAQ,mBACR,UAAa,8BACb,MAAS,MAEX,CACE,GAAM,EACN,QAAW,EACX,KAAQ,KACR,UAAa,8BACb,MAAS,kBAIf1C,cAAe,CACb,KAAQ,CACN,CACE,GAAM,EACN,MAAS,2DACT,KAAQ,sIAEV,CACE,GAAM,EACN,MAAS,2DACT,KAAQ,yIAeZ0D,EAAc,SAACC,EAAQxF,EAAMO,EAAM8E,GACrC,IAAII,EAAU,IAAIC,eAClBD,EAAQE,aAAe,OACvBF,EAAQG,KAAKJ,EAAb,UAAwBtH,EAAMkH,OAA9B,kBAA8CpF,IAC9CyF,EAAQI,iBAAiB,eAAgB,oBAE1B,QAAXL,GAEFC,EAAQI,iBAAiB,gBAAiB,SAAWR,GACrDI,EAAQK,iBAAiB,oBAAoB,WAC3C,GAA2B,IAAvBL,EAAQM,YAAuC,MAAnBN,EAAQO,OAAgB,CACtD,IAAIC,EAAOR,EAAQS,SACN,UAATlG,EAAkB9B,EAAMsC,MAAQyF,EAClB,aAATjG,EAAqB9B,EAAMoC,QAAU2F,EAC5B,kBAATjG,EAA0B9B,EAAM2D,cAAgBoE,EAEvC,YAATjG,IAAoB9B,EAAMqG,QAAU0B,OAKjDR,EAAQU,QAEY,SAAXX,IACTC,EAAQU,KAAKC,KAAKC,UAAU9F,IAC5BkF,EAAQa,OAAS,WAGXb,EAAQS,SAAR,IACFhI,EAAMmH,MAAQI,EAAQS,SAAR,IAGdhI,EAAMmH,OAAQ,KC5FPkB,E,YAhCb,aAAe,IAAD,8BACZ,+CACKrI,MAAQ,CACXkH,OAAQ,6BACRC,MAAO,IAJG,E,sEAQJ,IAAD,OACP,OACE,yBAAK1G,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,gBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEqB,KAAK,QACLgF,OAAQ,kBACN,kBAAC,EAAD,CAAMhH,SAAU,EAAKD,MAAMC,cAE/B,kBAAC,IAAD,CAAUc,GAAG,QAAQ0H,KAAO,aAC5B,kBAAC,IAAD,CACExG,KAAK,KACLgF,OAAQ,kBACN,kBAAC,EAAD,CAAM9G,MAAOA,EAAOuI,QAAS,EAAK1I,MAAM0I,eAGhD,kBAAC,EAAD,W,GA5BUzH,IAAMC,WCAJyH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAAS/B,OAAO,kBAAC,EAAD,CAAKyB,QH2FA,SAACzG,GACpBuF,EAAY,MAAOvF,EAAM,GAAI9B,EAAMmH,QG5FErH,SH+FjB,SAACgC,EAAMO,GAC3BgF,EAAY,OAAQvF,EAAMO,EAAM,OGhG6ByG,SAASC,eAAe,SD4HjF,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApD,GACLqD,QAAQrD,MAAMA,EAAMsD,a","file":"static/js/main.fdf9606f.chunk.js","sourcesContent":["import '../../App.css';\r\nimport React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Auth extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"user\",\r\n      password: \"AdobeFlash\"\r\n    }\r\n  }\r\n\r\n  onSubmitHandler = () => {\r\n    this.props.sendPost(\"auth/login/\", {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    });\r\n\r\n  }\r\n\r\n  onChangeField = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n  render() {\r\n    const { username, password } = this.state;\r\n  \r\n    return (\r\n      <div className=\"Auth\">\r\n\r\n        <form className=\"form-auth option-text-m\">\r\n\r\n          <input type=\"text\" value={username} className='field' name='username' onChange={this.onChangeField}></input>\r\n          <input type=\"password\" value={password} className='field' name='password' onChange={this.onChangeField}></input>\r\n\r\n\r\n          <NavLink to=\"/0/task/1\" className='submit-button'>\r\n            <input type=\"submit\" value=\"ВОЙТИ\" className='submit-button' onClick={this.onSubmitHandler}></input>\r\n          </NavLink>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","\r\nconst style = {\r\n\r\n    txt4circle: {\r\n        font: \" 400 16px 'Montserrat', sans- serif\",\r\n    },\r\n    title: {\r\n        marginTop: \"40px\",\r\n    },\r\n    task: {\r\n        marginTop: \"70px\",\r\n    },\r\n    heading: {\r\n        font: \"400 60px 'Montserrat', sans-serif\",\r\n    },\r\n    subHeading: {\r\n        font: \"400 36px 'Montserrat', sans-serif\",\r\n    },\r\n    text: {\r\n        font: \"400 24px 'Montserrat', sans-serif\",\r\n    },\r\n    upperElement:{\r\n        zIndex: \"9999\",\r\n    },\r\n    lowerElement:{\r\n        zIndex: \"98\",\r\n    },\r\n    unabledElement:{\r\n        zIndex: \"0\"\r\n    }\r\n};\r\n\r\nexport default style;","import React from 'react';\r\nimport '../../../App.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavItemTask = (props) => {\r\n\r\n    let path = '/0/task/' + props.id;\r\n    return (\r\n        <li key={props.id}><NavLink to={path}>{props.name}</NavLink> </li>\r\n    );\r\n}\r\nconst NavItemInfo = (props) => {\r\n\r\n    let path = '/0/info/' + props.id;\r\n    return (\r\n        <li key={props.id}><NavLink to={path}>Информация</NavLink> </li>\r\n    );\r\n}\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n\r\n        let tasks = this.props.state.contest.data[0].tasks;\r\n\r\n        let taskArray = tasks.map(\r\n            (el) =>\r\n                el.task_type === 1 ?\r\n                    <NavItemTask key={el.id} name={el.title} id={el.id} />\r\n                    : <NavItemInfo key={el.id} name={el.title} id={el.id} />\r\n        );\r\n        return (\r\n            <ul className=\"option-text-m\">\r\n                {taskArray}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport '../../../App.css';\r\nimport '../../../style/buttons.css';\r\nimport style from '../../../style/style';\r\nimport Navigation from './Navigation';\r\n\r\nclass NavMenu extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { menu: false }\r\n    }\r\n    openMenuBox = () => {\r\n        this.setState({ menu: true })\r\n    }\r\n    closeMenuBox = () => {\r\n        this.setState({ menu: false })\r\n    }\r\n    renderMenu = () => {\r\n        return (\r\n            <div className=\"screen\">\r\n\r\n                <div\r\n                    className=\"gray-screen\"\r\n                    style={style.lowerElement}>\r\n                </div>\r\n\r\n                <div\r\n                    className='nav-bar'\r\n                    style={style.upperElement}>\r\n\r\n                    <button\r\n                        className='close-menu-btn option-text-m'\r\n                        onClick={this.closeMenuBox}>\r\n                        disable menu\r\n                        </button>\r\n                    <Navigation state={this.props.state}></Navigation>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    renderBtn = () => {\r\n        return (\r\n            <div\r\n                className=\"btn open-menu-btn\"\r\n                style={style.unabledElement}\r\n                onClick={this.openMenuBox}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        if (this.state.menu) {\r\n            return this.renderMenu();\r\n        } else {\r\n            return this.renderBtn();\r\n        }\r\n    }\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className=\"message blck-border\" key={props.id}>\r\n            <div className=\"content-box option-text-s\">{props.content}</div>\r\n            <div className=\"time-box small-text\">{props.time + ' ' + props.date}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport '../../../App.css';\r\nimport '../../../style/buttons.css';\r\nimport style from '../../../style/style';\r\n\r\nimport Message from './Message';\r\n\r\nclass Chat extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { chat: false }\r\n    }\r\n    openChatBox = () => {\r\n        this.setState({ chat: true })\r\n    }\r\n    closeChatBox = () => {\r\n        this.setState({ chat: false })\r\n    }\r\n    renderChat = (messages) => {\r\n\r\n        let messageArray = messages.map(\r\n            (el)=> <Message key={el.id} content={el.text} date={el.id} time={el.id}/>\r\n        );\r\n\r\n        return (\r\n            <div className=\"chat-box blck-border\">\r\n                <button\r\n                    className=\"close-chat-btn option-text-m\"\r\n                    onClick={this.closeChatBox}>\r\n                    disable chat\r\n                </button>\r\n               {messageArray}\r\n\r\n            </div >\r\n        );\r\n    }\r\n    renderBtn = () => {\r\n        return (\r\n            <div\r\n                className=\"btn open-chat-btn\"\r\n                style={style.unabledElement}\r\n                onClick={this.openChatBox}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        let messages=this.props.state.notifications.data;\r\n        if (this.state.chat) {\r\n            return this.renderChat(messages);\r\n        } else {\r\n            return this.renderBtn();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nfunction Bar(props) {\r\n\r\n    return (\r\n        <div className='bar blck-border option-text-m'>\r\n            <div style={{\r\n                backgroundColor: props.color,\r\n                width: props.width * 2+'px',\r\n                height: \"100%\"\r\n            }}></div>\r\n            <div style={{\r\n                position: 'inherit',\r\n                marginTop: \"-23px\"\r\n        }}>\r\n                {props.content}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\nimport '../../../App.css';\r\nimport style from '../../../style/style';\r\n\r\n\r\nfunction Circle(props) {\r\n\r\n    function showScore(num) {\r\n\r\n        let x = num % 10;\r\n        if (x === 1 && num !== 11) {\r\n            return (num + \" балла\");\r\n        } else if ((x === 2 || x === 3 || x === 4) && (num !== 12 && num !== 13 && num !== 14)) {\r\n            return (num + \" балла\");\r\n        } else {\r\n            return (num + \" баллов\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='circle blck-border'>\r\n            <div style={style.txt4circle}>\r\n            {showScore(props.content)}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Circle;","import React from 'react';\r\n\r\nimport '../../../App.css';\r\nimport '../../../style/points.css';\r\n\r\nimport Bar from './Bar';\r\nimport Circle from './Circle';\r\n\r\nclass Points extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            //test data \r\n            score: \"\",\r\n            maxScore: \"\",\r\n            time: \"20:20\",\r\n            maxTime: \"36:00\",\r\n        }\r\n    }\r\n    countProgress = (score, maxScore) => {\r\n        return Math.ceil(score / maxScore * 100);\r\n    }\r\n\r\n    countTime = (time, maxTime) => {\r\n\r\n        return 34;\r\n    }\r\n    \r\n    countScore = (where, what, which) => {\r\n        let score = 0;\r\n        where.forEach(el => {\r\n            score += el[what];\r\n        });\r\n        this.setState({ [which]: score });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let contest = this.props.state.contest.data[0];\r\n        let progress = this.props.state.tasks.data;\r\n\r\n        this.countScore(progress, 'progress', 'score');\r\n        this.countScore(contest.tasks, 'points', 'maxScore');\r\n\r\n        let start_time = contest.date_start;\r\n        let lasts = contest.duration;\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"points\">\r\n                <div className=\"bars\">\r\n                    <Bar\r\n                        width={this.countProgress(this.state.score, this.state.maxScore)}\r\n                        color=\"#78d0ff\"\r\n                        content={\"Прогресс - \" + this.countProgress(this.state.score, this.state.maxScore) + \"%\"}\r\n                    />\r\n                    <Bar\r\n                        width={this.countTime(this.state.time, this.state.maxTime)}\r\n                        color=\"#96c7cc\"\r\n                        content={this.state.time}\r\n                    />\r\n                </div>\r\n                <Circle\r\n                    content={this.state.score}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Points;\r\n\r\n\r\n","import React from 'react';\r\nimport '../../../App.css';\r\nimport '../../../style/buttons.css';\r\nimport style from '../../../style/style';\r\n\r\nclass Notification extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { notification: false };\r\n    }\r\n\r\n    openNotPanel = () => {\r\n        this.setState({ notification: true });\r\n    }\r\n    closeNotPanel = () => {\r\n        this.setState({ notification: false });\r\n    }\r\n\r\n    renderBtn = () => {\r\n        return (\r\n            <button\r\n                className=\"btn not-open-btn\"\r\n                style={style.unabledElement}\r\n                onClick={this.openNotPanel}>\r\n\r\n            </button>\r\n        );\r\n    }\r\n    renderBox = () => {\r\n        return (\r\n            <div className=\"screen not-panel-align\">\r\n                <div\r\n                    className=\"gray-screen\"\r\n                    style={style.lowerElement}>\r\n                </div>\r\n\r\n                <div\r\n                    className='msg-box'\r\n                    style={style.upperElement}>\r\n                    <button className='btn not-close-btn' onClick={this.closeNotPanel}></button>\r\n                    <div className='not-text normal-text'>{msg }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.notification) {\r\n            return this.renderBox();\r\n        } else {\r\n            return this.renderBtn();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Notification;\r\n\r\n//test data\r\nlet msg = \"в этом окне будетт выводиться различная инвормация для пользователя. То есть может выводится контент любого типа. если петя напишет к немк апи\"","import React from 'react';\r\nimport '../../../App.css';\r\nimport '../../../style/table.css';\r\n\r\nclass Line extends React.Component {\r\n\r\n    dateCleaner = (date) => {\r\n\r\n        let data =date.split(\"T\");\r\n        let time = data[0];\r\n        data = data[1].split(\".\")[0];\r\n        time += '\\t' +data +'\\t';\r\n\r\n        return time;\r\n    }\r\n\r\n    renderRight = (props) => {\r\n        return (\r\n            <tr key={props.id}>\r\n                <td className='data rigth'>{`${this.dateCleaner(props.date)}${props.text}`}</td>\r\n                <td className='result'>{props.result}</td>\r\n            </tr>\r\n        );\r\n    }\r\n    renderWrong = (props) => {\r\n        return (\r\n            <tr>\r\n                <td className='data wrong'>{`${this.dateCleaner(props.date)}${props.error}`}</td>\r\n                <td className='result'>0</td>\r\n            </tr>\r\n        );\r\n    }\r\n    render() {\r\n        if (this.props.error == null) {\r\n            return this.renderRight(this.props);\r\n        }\r\n        else {\r\n            return this.renderWrong(this.props);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Line;","import React from 'react';\r\nimport '../../App.css';\r\nimport '../../style/table.css';\r\n\r\nimport Line from '../high_gen/fGround_comp/Line';\r\n\r\nclass Table extends React.Component {\r\n    render() {\r\n        let answers = this.props.state.answers.data;\r\n        let answerArray = answers.map(\r\n            (el) =>\r\n                el.error == null ?\r\n                    <Line key={el.id} text={el.data} date={el.date_send} error={null} result={el.result} />\r\n                    : <Line key={el.id} text={null} date={el.date_send} error={el.error} result={el.result} />\r\n        );\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <table className='option-text-m'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Попытки</th>\r\n                            <th>Баллы</th>\r\n                        </tr>\r\n\r\n                        {answerArray}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n\r\n","import '../../App.css';\r\nimport React from 'react';\r\n\r\nimport Table from './Table';\r\n\r\nclass Task extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"heading2 title\">{this.props.title}</div>\r\n                <div className=\"normal-text task\">{this.props.text}</div>\r\n                <Table state={this.props.state}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport '../../App.css';\r\n\r\nclass Info extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"main\">\r\n            <div className=\"heading2 title\">{this.props.title}</div>\r\n            <div className=\"normal-text\">{this.props.text}</div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","import '../../App.css';\r\nimport React from 'react';\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport NavMenu from './fGround_comp/NavMenu';\r\nimport Chat from './fGround_comp/Chat';\r\nimport Points from './fGround_comp/Points';\r\nimport Notification from './fGround_comp/Notification';\r\n\r\nimport Task from '../low_gen/Task';\r\nimport Info from '../low_gen/Info';\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n\r\n  handler = () => {\r\n    //this.props.sendGet(\"marker/\");\r\n    //this.props.sendGet(\"contest/\"); \r\n    //this.props.sendGet(\"task/\");\r\n    //this.props.sendGet(\"notification/\"); \r\n    //this.props.sendGet(\"answer/\");\r\n  }\r\n  componentDidMount() {\r\n    setTimeout(this.handler, 5000);\r\n  }\r\n\r\n  render() {\r\n\r\n    let tasks= this.props.state.tasks.data;\r\n    let routeArray = tasks.map(\r\n      (el) =>\r\n        el.task.task_type === 1 ?\r\n          <Route\r\n            exact path={'/0/task/' + el.id}\r\n            render={() => <Task title={el.task.title} text={el.task.text} state={this.props.state} />} />\r\n          : <Route\r\n            exact path={'/0/info/' + el.id}\r\n            render={() => <Info title={el.task.title} text={el.task.text} />} />\r\n    );\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          <NavMenu state={this.props.state} />\r\n          <Chat state={this.props.state}/>\r\n          <Notification />\r\n          <div className=\"content main\">\r\n            <Points state={this.props.state}/>\r\n            {routeArray}\r\n\r\n            <Route path='/0/task' render={() => {}} />\r\n            <Route exact path='/0/info' component={Info} />\r\n          </div>\r\n        </BrowserRouter >\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst Header = () => (\r\n    <header>\r\n            <div className=\"logo\" ></div>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../../App.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer></footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","export let state = {\r\n  server: \"http://139.162.141.55:8000\",\r\n  token: \"41cad6a8e57793becafa1b4037ac7d10f941634e\",\r\n  auth: {\r\n    username: \"user\",\r\n    password: \"AdobeFlash\"\r\n  },\r\n  tasks: {\r\n    \"data\": [\r\n      {\r\n        \"id\": 1,\r\n        \"task\": {\r\n          \"id\": 1,\r\n          \"task_block\": 1,\r\n          \"task_type\": 1,\r\n          \"title\": \"Задание 1\",\r\n          \"text\": \"Имеются изображения маркеров 8 типов. Задача - написать классификатор маркеров, который по одному изображению говорит его id и разворот относительно оригинального изображения. Для получения оригинальных изображений и их id следует отправить запрос на сервер с коммандо get_omarkers Для получения маркеров со стенда, которые следует распознать нужно отправить запрос на сервер get_merkerks\",\r\n          \"points\": 45\r\n        },\r\n        \"progress\": 0\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"task\": {\r\n          \"id\": 2,\r\n          \"task_block\": 1,\r\n          \"task_type\": 1,\r\n          \"title\": \"Задание 2\",\r\n          \"text\": \"Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2\",\r\n          \"points\": 35\r\n        },\r\n        \"progress\": 24\r\n      }\r\n    ]\r\n  },\r\n  contest: {\r\n    \"data\": [\r\n      {\r\n        \"id\": 1,\r\n        \"name\": \"TestContest\",\r\n        \"duration\": \"00:06:00\",\r\n        \"date_start\": \"2020-02-24T09:42:39Z\",\r\n        \"tasks\": [\r\n          {\r\n            \"id\": 1,\r\n            \"task_block\": 1,\r\n            \"task_type\": 1,\r\n            \"title\": \"Задание 1\",\r\n            \"text\": \"Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1Задание 1\",\r\n            \"points\": 45\r\n          },\r\n          {\r\n            \"id\": 2,\r\n            \"task_block\": 1,\r\n            \"task_type\": 1,\r\n            \"title\": \"Задание 2\",\r\n            \"text\": \"Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2Задание 2\",\r\n            \"points\": 35\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  answers: {\r\n    \"data\": [\r\n      {\r\n        \"id\": 1,\r\n        \"result\": 24,\r\n        \"data\": \"TimeWork - 24sec\",\r\n        \"date_send\": \"2020-02-24T09:58:48.004527Z\",\r\n        \"error\": null\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"result\": -1,\r\n        \"data\": null,\r\n        \"date_send\": \"2020-02-24T09:59:58.346551Z\",\r\n        \"error\": \"Wrong Format\"\r\n      }\r\n    ]\r\n  },\r\n  notifications: {\r\n    \"data\": [\r\n      {\r\n        \"id\": 1,\r\n        \"title\": \"Сообщение 1\",\r\n        \"text\": \"Всем переделать задание 2\"\r\n      },\r\n      {\r\n        \"id\": 2,\r\n        \"title\": \"Сообщение 2\",\r\n        \"text\": \"Всем переделать задание 3\"\r\n      }\r\n    ]\r\n  },\r\n  //markers: {}\r\n}\r\n\r\nexport let sendGet = (path) => {\r\n  sendRequest(\"GET\", path, \"\", state.token);\r\n}\r\n\r\nexport let sendPost = (path, data) => {\r\n  sendRequest(\"POST\", path, data, \"\");\r\n}\r\n\r\nlet sendRequest = (method, path, data, token) => {\r\n  let request = new XMLHttpRequest();\r\n  request.responseType = 'json';\r\n  request.open(method, `${state.server}/api/0/${path}`);\r\n  request.setRequestHeader('content-Type', 'application/json');\r\n\r\n  if (method === \"GET\") {\r\n    //console.log(\"token before get\", state.token);\r\n    request.setRequestHeader('Authorization', 'Token ' + token);\r\n    request.addEventListener(\"readystatechange\", () => {\r\n      if (request.readyState === 4 && request.status === 200) {\r\n        let answ = request.response;\r\n        if (path === \"task/\") state.tasks = answ;\r\n        else if (path === \"contest/\") state.contest = answ;\r\n        else if (path === \"notification/\") state.notifications = answ;\r\n        //else if (path ===\"marker/\") state.markers=answ;\r\n        else if (path === \"answer/\") state.answers = answ;\r\n        //console.log(\"true1\", state);\r\n\r\n      }\r\n    });\r\n    request.send();\r\n\r\n  } else if (method === \"POST\") {\r\n    request.send(JSON.stringify(data));\r\n    request.onload = () => {\r\n      //console.log(\"true2\", request.response);\r\n\r\n      if (request.response['key']) {\r\n        state.token = request.response['key'];\r\n        //console.log(state.token);\r\n      } else {\r\n        state.token = false;\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n\r\n","import './App.css';\r\nimport './style/high_gen.css';\r\nimport React from 'react';\r\nimport { Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport Auth from './components/high_gen/Auth';\r\nimport Main from './components/high_gen/Main';\r\nimport Header from './components/high_gen/Header';\r\nimport Footer from './components/high_gen/Footer';\r\n\r\nimport { state } from './components/static/Requests';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      server: \"http://139.162.141.55:8000\",\r\n      token: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"content-page\">\r\n          <BrowserRouter>\r\n            <Route\r\n              path='/auth'\r\n              render={() =>\r\n                <Auth sendPost={this.props.sendPost} />} />\r\n\r\n            <Redirect to='/auth' from = \"/alt_nti\"/>\r\n            <Route\r\n              path='/0'\r\n              render={() =>\r\n                <Main state={state} sendGet={this.props.sendGet}/>} />\r\n          </BrowserRouter>\r\n        </div>\r\n        <Footer />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n  sendRequest = (method, path, data) => {\r\n    let request = new XMLHttpRequest();\r\n    request.responseType = 'json';\r\n    request.open(method, `${this.state.server}/api/0/${path}`);\r\n    request.setRequestHeader('content-Type', 'application/json');\r\n\r\n    if (method === \"GET\") {\r\n      console.log(this.state.token);\r\n      request.setRequestHeader('Authorization', 'Token ' + this.state.token);\r\n      request.addEventListener(\"readystatechange\", () => {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n          console.log(request.response);\r\n          return request;\r\n        }\r\n      });\r\n      request.send();\r\n\r\n    } else if (method === \"POST\") {\r\n      request.send(JSON.stringify(data));\r\n      request.onload = () => {\r\n        console.log(request.response);\r\n        this.setState({ token: request.response['key'] });\r\n      };\r\n    }\r\n  }\r\n\r\n  sendGet = (path) => {\r\n    this.sendRequest(\"GET\", path, \"\");\r\n  }\r\n\r\n  sendPost = (path, data) => {\r\n    this.sendRequest(\"POST\", path, data);\r\n  }\r\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {sendGet, sendPost} from './components/static/Requests'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App sendGet={sendGet} sendPost={sendPost} />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}