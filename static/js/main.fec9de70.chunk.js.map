{"version":3,"sources":["components/high_gen/Auth.js","style/style.js","components/high_gen/fGround_comp/Navigation.js","components/high_gen/fGround_comp/NavMenu.js","components/high_gen/fGround_comp/Message.js","components/high_gen/fGround_comp/Chat.js","components/high_gen/fGround_comp/Bar.js","components/high_gen/fGround_comp/Circle.js","components/high_gen/fGround_comp/Points.js","components/high_gen/fGround_comp/Notification.js","components/high_gen/fGround_comp/Line.js","components/low_gen/Task.js","components/low_gen/Table.js","components/low_gen/Info.js","components/static/Requests.js","components/high_gen/Main.js","components/high_gen/Header.js","components/high_gen/Footer.js","components/static/Loading.js","App.js","serviceWorker.js","index.js"],"names":["Auth","onSubmitHandler","a","token","props","sendPost","username","state","password","t","validateLogin","sessionStorage","setState","redirect","onChangeField","event","target","name","value","this","className","type","onChange","onClick","to","from","console","log","red","React","Component","style","txt4circle","font","title","marginTop","task","heading","subHeading","text","upperElement","zIndex","lowerElement","unabledElement","NavItemTask","path","id","key","NavItemInfo","Navigation","taskArray","JSON","parse","localStorage","getItem","tasks","map","el","task_type","NavMenu","openMenuBox","menu","closeMenuBox","renderMenu","renderBtn","Message","content","time","date","Chat","openChatBox","chat","closeChatBox","renderChat","messages","messageArray","Bar","backgroundColor","color","width","height","position","Circle","num","x","showScore","Points","countProgress","score","maxScore","Math","ceil","countTime","maxTime","countScore","where","what","which","forEach","progress","Notification","openNotPanel","notification","closeNotPanel","renderBox","msg","Line","dateCleaner","data","split","renderRight","result","renderWrong","error","Task","Info","server","sendGet","fetch","method","headers","response","ok","json","setItem","stringify","alert","status","body","Main","handler","timer","renderTasks","exact","render","component","Header","Footer","Loading","isLoaded","setTimeout","undefined","class","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fec9de70.chunk.js","sourcesContent":["import '../../App.css';\r\nimport React from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Auth extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n\r\n  onSubmitHandler = () => {\r\n    (async () => {\r\n      let token = this.props.sendPost(\"auth/login/\", {\r\n        username: this.state.username,\r\n        password: this.state.password\r\n      });\r\n      let t = await token;\r\n      this.validateLogin(t);\r\n    })();\r\n  }\r\n\r\n  validateLogin = (token) => {\r\n    (token === sessionStorage.token && token) ?\r\n      this.setState({ redirect: true }) : this.setState({ redirect: false });\r\n  }\r\n  onChangeField = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n  render() {\r\n    const { username, password } = this.state;\r\n    let red = () => {\r\n      if (this.state.redirect === true) {\r\n        return (\r\n          <Redirect to=\"/loader\" from=\"/auth\" />)\r\n      }\r\n      else {\r\n        console.log(\"try again\");\r\n        //return (<Redirect to=\"/auth\" from=\"/auth\" />) \r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"Auth\" >\r\n\r\n        <form className=\"form-auth option-text-m\">\r\n\r\n          <input type=\"text\" value={username} className='field' name='username' onChange={this.onChangeField}></input>\r\n          <input type=\"password\" value={password} className='field' name='password' onChange={this.onChangeField}></input>\r\n\r\n          <input type=\"button\" value=\"ВОЙТИ\" className='submit-button' onClick={this.onSubmitHandler}></input>\r\n          {red()}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","\r\nconst style = {\r\n\r\n    txt4circle: {\r\n        font: \" 400 16px 'Montserrat', sans- serif\",\r\n    },\r\n    title: {\r\n        marginTop: \"40px\",\r\n    },\r\n    task: {\r\n        marginTop: \"70px\",\r\n    },\r\n    heading: {\r\n        font: \"400 60px 'Montserrat', sans-serif\",\r\n    },\r\n    subHeading: {\r\n        font: \"400 36px 'Montserrat', sans-serif\",\r\n    },\r\n    text: {\r\n        font: \"400 24px 'Montserrat', sans-serif\",\r\n    },\r\n    upperElement:{\r\n        zIndex: \"9999\",\r\n    },\r\n    lowerElement:{\r\n        zIndex: \"98\",\r\n    },\r\n    unabledElement:{\r\n        zIndex: \"0\"\r\n    }\r\n};\r\n\r\nexport default style;","import React from 'react';\r\nimport '../../../App.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavItemTask = (props) => {\r\n\r\n    let path = '/0/task/' + props.id;\r\n    return (\r\n        <li key={props.id}><NavLink to={path}>{props.name}</NavLink> </li>\r\n    );\r\n}\r\nconst NavItemInfo = (props) => {\r\n\r\n    let path = '/0/info/' + props.id;\r\n    return (\r\n        <li key={props.id}><NavLink to={path}>Информация</NavLink> </li>\r\n    );\r\n}\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n\r\n        let contest = JSON.parse(localStorage.getItem(\"contest\"));\r\n        let tasks = contest[0].tasks;\r\n\r\n        let taskArray = tasks.map(\r\n            (el) =>\r\n                el.task_type === 1 ?\r\n                    <NavItemTask key={el.id} name={el.title} id={el.id} />\r\n                    : <NavItemInfo key={el.id} name={el.title} id={el.id} />\r\n        );\r\n        return (\r\n            <ul className=\"option-text-m\">\r\n                {taskArray}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport '../../../App.css';\r\nimport '../../../style/buttons.css';\r\nimport style from '../../../style/style';\r\nimport Navigation from './Navigation';\r\n\r\nclass NavMenu extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = { menu: false }\r\n    }\r\n    openMenuBox = () => {\r\n        this.setState({ menu: true })\r\n    }\r\n    closeMenuBox = () => {\r\n        this.setState({ menu: false })\r\n    }\r\n    renderMenu = () => {\r\n        return (\r\n            <div className=\"screen\">\r\n\r\n                <div\r\n                    className=\"gray-screen\"\r\n                    style={style.lowerElement}>\r\n                </div>\r\n\r\n                <div\r\n                    className='nav-bar'\r\n                    style={style.upperElement}>\r\n\r\n                    <button\r\n                        className='close-menu-btn option-text-m'\r\n                        onClick={this.closeMenuBox}>\r\n                        disable menu\r\n                        </button>\r\n                    <Navigation />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    renderBtn = () => {\r\n        return (\r\n            <div\r\n                className=\"btn open-menu-btn\"\r\n                style={style.unabledElement}\r\n                onClick={this.openMenuBox}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        if (this.state.menu) {\r\n            return this.renderMenu();\r\n        } else {\r\n            return this.renderBtn();\r\n        }\r\n    }\r\n}\r\n\r\nexport default NavMenu;","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nfunction Message(props) {\r\n    return (\r\n        <div className=\"message blck-border\" key={props.id}>\r\n            <div className=\"content-box option-text-s\">{props.content}</div>\r\n            <div className=\"time-box small-text\">{props.time + ' ' + props.date}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\n\r\nimport '../../../App.css';\r\nimport '../../../style/buttons.css';\r\nimport style from '../../../style/style';\r\n\r\nimport Message from './Message';\r\n\r\nclass Chat extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { chat: false }\r\n    }\r\n    openChatBox = () => {\r\n        this.setState({ chat: true })\r\n    }\r\n    closeChatBox = () => {\r\n        this.setState({ chat: false })\r\n    }\r\n    renderChat = (messages) => {\r\n\r\n        let messageArray = messages.map(\r\n            (el) => <Message key={el.id} content={el.text} date={el.id} time={el.id}/>\r\n        );\r\n\r\n        return (\r\n            <div className=\"chat-box blck-border\">\r\n                <button\r\n                    className=\"close-chat-btn option-text-m\"\r\n                    onClick={this.closeChatBox}>\r\n                    disable chat\r\n                </button>\r\n                {messageArray}\r\n\r\n            </div >\r\n        );\r\n    }\r\n    renderBtn = () => {\r\n        return (\r\n            <div\r\n                className=\"btn open-chat-btn\"\r\n                style={style.unabledElement}\r\n                onClick={this.openChatBox}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    render() {\r\n        let messages = JSON.parse(localStorage.getItem(\"notifications\"));\r\n        if (this.state.chat) {\r\n            return this.renderChat(messages);\r\n        } else {\r\n            return this.renderBtn();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport '../../../App.css';\r\n\r\nfunction Bar(props) {\r\n\r\n    return (\r\n        <div className='bar blck-border option-text-m'>\r\n            <div style={{\r\n                backgroundColor: props.color,\r\n                width: props.width * 2+'px',\r\n                height: \"100%\"\r\n            }}></div>\r\n            <div style={{\r\n                position: 'inherit',\r\n                marginTop: \"-23px\"\r\n        }}>\r\n                {props.content}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\nimport '../../../App.css';\r\nimport style from '../../../style/style';\r\n\r\n\r\nfunction Circle(props) {\r\n\r\n    function showScore(num) {\r\n\r\n        let x = num % 10;\r\n        if (x === 1 && num !== 11) {\r\n            return (num + \" балла\");\r\n        } else if ((x === 2 || x === 3 || x === 4) && (num !== 12 && num !== 13 && num !== 14)) {\r\n            return (num + \" балла\");\r\n        } else {\r\n            return (num + \" баллов\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='circle blck-border'>\r\n            <div style={style.txt4circle}>\r\n            {showScore(props.content)}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Circle;","import React from 'react';\r\n\r\nimport '../../../App.css';\r\nimport '../../../style/points.css';\r\n\r\nimport Bar from './Bar';\r\nimport Circle from './Circle';\r\n\r\nclass Points extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            //test data \r\n            score: \"\",\r\n            maxScore: \"\",\r\n            time: \"20:20\",\r\n            maxTime: \"36:00\",\r\n        }\r\n    }\r\n    countProgress = (score, maxScore) => {\r\n        return Math.ceil(score / maxScore * 100);\r\n    }\r\n\r\n    countTime = (time, maxTime) => {\r\n\r\n        return 34;\r\n    }\r\n    \r\n    countScore = (where, what, which) => {\r\n        let score = 0;\r\n        where.forEach(el => {\r\n            score += el[what];\r\n        });\r\n        this.setState({ [which]: score });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let contest = JSON.parse(localStorage.getItem(\"contest\"));\r\n        //let progress = this.props.state.tasks.data;\r\n        let progress = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n        console.log(\"p_tasks\", progress);\r\n\r\n        //this.countScore(progress, 'progress', 'score');\r\n        //this.countScore(contest[0].tasks, 'points', 'maxScore');\r\n\r\n        //let start_time = contest.date_start;\r\n        //let lasts = contest.duration;\r\n    }\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div className=\"points\">\r\n                <div className=\"bars\">\r\n                    <Bar\r\n                        width={this.countProgress(this.state.score, this.state.maxScore)}\r\n                        color=\"#78d0ff\"\r\n                        content={\"Прогресс - \" + this.countProgress(this.state.score, this.state.maxScore) + \"%\"}\r\n                    />\r\n                    <Bar\r\n                        width={this.countTime(this.state.time, this.state.maxTime)}\r\n                        color=\"#96c7cc\"\r\n                        content={this.state.time}\r\n                    />\r\n                </div>\r\n                <Circle\r\n                    content={this.state.score}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Points;\r\n\r\n\r\n","import React from 'react';\r\nimport '../../../App.css';\r\nimport '../../../style/buttons.css';\r\nimport style from '../../../style/style';\r\n\r\nclass Notification extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { notification: false };\r\n    }\r\n\r\n    openNotPanel = () => {\r\n        this.setState({ notification: true });\r\n    }\r\n    closeNotPanel = () => {\r\n        this.setState({ notification: false });\r\n    }\r\n\r\n    renderBtn = () => {\r\n        return (\r\n            <button\r\n                className=\"btn not-open-btn\"\r\n                style={style.unabledElement}\r\n                onClick={this.openNotPanel}>\r\n\r\n            </button>\r\n        );\r\n    }\r\n    renderBox = () => {\r\n        return (\r\n            <div className=\"screen not-panel-align\">\r\n                <div\r\n                    className=\"gray-screen\"\r\n                    style={style.lowerElement}>\r\n                </div>\r\n\r\n                <div\r\n                    className='msg-box'\r\n                    style={style.upperElement}>\r\n                    <button className='btn not-close-btn' onClick={this.closeNotPanel}></button>\r\n                    <div className='not-text normal-text'>{msg }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.notification) {\r\n            return this.renderBox();\r\n        } else {\r\n            return this.renderBtn();\r\n        }\r\n    }\r\n}\r\n\r\nexport default Notification;\r\n\r\n//test data\r\nlet msg = \"в этом окне будетт выводиться различная инвормация для пользователя. То есть может выводится контент любого типа. если петя напишет к немк апи\"","import React from 'react';\r\nimport '../../../App.css';\r\nimport '../../../style/table.css';\r\n\r\nclass Line extends React.Component {\r\n\r\n    dateCleaner = (date) => {\r\n\r\n        let data =date.split(\"T\");\r\n        let time = data[0];\r\n        data = data[1].split(\".\")[0];\r\n        time += '\\t' +data +'\\t';\r\n\r\n        return time;\r\n    }\r\n\r\n    renderRight = (props) => {\r\n        return (\r\n            <tr key={props.id}>\r\n                <td className='data rigth'>{`${this.dateCleaner(props.date)}${props.text}`}</td>\r\n                <td className='result'>{props.result}</td>\r\n            </tr>\r\n        );\r\n    }\r\n    renderWrong = (props) => {\r\n        return (\r\n            <tr>\r\n                <td className='data wrong'>{`${this.dateCleaner(props.date)}${props.error}`}</td>\r\n                <td className='result'>0</td>\r\n            </tr>\r\n        );\r\n    }\r\n    render() {\r\n        if (this.props.error == null) {\r\n            return this.renderRight(this.props);\r\n        }\r\n        else {\r\n            return this.renderWrong(this.props);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Line;","import '../../App.css';\r\nimport React from 'react';\r\n\r\nimport Table from './Table';\r\n\r\nclass Task extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <div className=\"heading2 title\">{this.props.title}</div>\r\n                <div className=\"normal-text task\">{this.props.text}</div>\r\n                {/*<Table state={this.props.state}/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Task;","import React from 'react';\r\nimport '../../App.css';\r\nimport '../../style/table.css';\r\n\r\nimport Line from '../high_gen/fGround_comp/Line';\r\n\r\nclass Table extends React.Component {\r\n    render() {\r\n        let answers = this.props.state.answers.data;\r\n        let answerArray = answers.map(\r\n            (el) =>\r\n                el.error == null ?\r\n                    <Line key={el.id} text={el.data} date={el.date_send} error={null} result={el.result} />\r\n                    : <Line key={el.id} text={null} date={el.date_send} error={el.error} result={el.result} />\r\n        );\r\n        return (\r\n            <div>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <br></br>\r\n                <table className='option-text-m'>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Попытки</th>\r\n                            <th>Баллы</th>\r\n                        </tr>\r\n\r\n                        {answerArray}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;\r\n\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nclass Info extends React.Component {\r\n    render() {\r\n        return (\r\n        <div className=\"main\">\r\n            <div className=\"heading2 title\">{this.props.title}</div>\r\n            <div className=\"normal-text\">{this.props.text}</div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Info;","\r\n let server= \"http://139.162.141.55:8000\";\r\n  \r\nexport let sendGet = async (path) => {\r\n  let response = await fetch(`${server}/api/0/${path}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n      'Authorization': 'Token ' + sessionStorage.token\r\n    },\r\n  });\r\n\r\n  if (response.ok) {\r\n    let result = await response.json();\r\n    //console.log(result.data);\r\n    if (path === \"task/\") localStorage.setItem( \"task\", JSON.stringify( result.data));\r\n      else if (path === \"contest/\") localStorage.setItem(\"contest\" , JSON.stringify( result.data));\r\n      else if (path === \"notification/\") localStorage.setItem(\"notifications\" , JSON.stringify( result.data));\r\n      else if (path === \"answer/\") localStorage.setItem(\"answers\" , JSON.stringify( result.data));\r\n\r\n      return result.data;\r\n  } else {\r\n    alert(\"Ошибка HTTP: \" + response.status);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport let sendPost = async (path, data) => {\r\n\r\n  let response = await fetch(`${server}/api/0/${path}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8'\r\n    },\r\n    body: JSON.stringify(data)\r\n  });\r\n  let result = await response.json();\r\n\r\n  if (typeof result['key'] !== 'undefined') {\r\n    sessionStorage.setItem('token', result['key']);\r\n    return (result['key']);\r\n  }\r\n  else {\r\n    sessionStorage.setItem('token', false);\r\n    return false;\r\n  }\r\n}\r\n\r\n\r\n\r\n/*\r\nexport let Get = (path) => {\r\n  let request = new XMLHttpRequest();\r\n  request.responseType = 'json';\r\n  request.open(\"GET\", `${state.server}/api/0/${path}`);\r\n  request.setRequestHeader('content-Type', 'application/json');\r\n  request.setRequestHeader('Authorization', 'Token ' + sessionStorage.token);\r\n  request.addEventListener(\"readystatechange\", () => {\r\n    if (request.readyState === 4 && request.status === 200) {\r\n      let answ = request.response;\r\n      if (path === \"task/\") state.tasks = answ;\r\n      else if (path === \"contest/\") state.contest = answ;\r\n      else if (path === \"notification/\") state.notifications = answ;\r\n      //else if (path ===\"marker/\") state.markers=answ;\r\n      else if (path === \"answer/\") state.answers = answ;\r\n      console.log(\"true1\", state);\r\n\r\n    }\r\n  });\r\n  request.send();\r\n}\r\n\r\nexport let Post = (path, data) => {\r\n\r\n  let request = new XMLHttpRequest();\r\n  request.responseType = 'json';\r\n  request.open(\"POST\", `${state.server}/api/0/${path}`);\r\n  request.setRequestHeader('content-Type', 'application/json');\r\n  request.send(JSON.stringify(data));\r\n  request.addEventListener(\"readystatechange\", () => {\r\n\r\n    if (request.readyState === 4 && request.status === 200) {\r\n\r\n      let token = request.response.key;\r\n      sessionStorage.setItem('token', token);\r\n      console.log(token);\r\n      return token;\r\n\r\n    } else {\r\n      //alert(\"try again\");\r\n      sessionStorage.setItem('token', false);\r\n      return false;\r\n    }\r\n  });\r\n\r\n\r\n}*/","import '../../App.css';\r\nimport React from 'react';\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport NavMenu from './fGround_comp/NavMenu';\r\nimport Chat from './fGround_comp/Chat';\r\nimport Points from './fGround_comp/Points';\r\nimport Notification from './fGround_comp/Notification';\r\n\r\nimport Task from '../low_gen/Task';\r\nimport Info from '../low_gen/Info';\r\n\r\nimport { sendGet } from '../static/Requests';\r\n\r\n\r\n\r\nclass Main extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      status: false\r\n    };\r\n  }\r\n  handler = async () => {\r\n    let timer = await sendGet(\"contest/\");\r\n    sendGet(\"answer/\");\r\n\r\n    sendGet(\"task/\");\r\n    sendGet(\"notification/\");\r\n    console.log(timer);\r\n\r\n  }\r\n\r\n  renderTasks = () => {\r\n    let contest = JSON.parse(localStorage.getItem(\"contest\"));\r\n    let tasks = contest[0].tasks;\r\n    let routeArray = tasks.map(\r\n      (el) =>\r\n        el.task_type === 1 ?\r\n          <Route\r\n            exact path={'/0/task/' + el.id}\r\n            render={() => <Task title={el.title} text={el.text} />} />\r\n          : <Route\r\n            exact path={'/0/info/' + el.id}\r\n            render={() => <Info title={el.title} text={el.text} />} />\r\n    );\r\n    return routeArray;\r\n  }\r\n  render() {\r\n    this.handler();\r\n\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          <NavMenu />\r\n          <Chat />\r\n          <Notification />\r\n          <div className=\"content main\">\r\n            <Points />\r\n\r\n            {this.renderTasks()}\r\n            <Route path='/0/task' component={Task} />\r\n            <Route path='/0/info' component={Info} />\r\n          </div>\r\n        </BrowserRouter >\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst Header = () => (\r\n    <header>\r\n            <div className=\"logo\" ></div>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../../App.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer></footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../../style/preloader.scss';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { sendGet } from '../static/Requests';\r\n\r\nclass Loading extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoaded: false\r\n        }\r\n    }\r\n    handler = async () => {\r\n        let timer = await sendGet(\"contest/\");\r\n        sendGet(\"answer/\");\r\n\r\n        sendGet(\"task/\");\r\n        sendGet(\"notification/\");\r\n        console.log(timer);\r\n    }\r\n    componentDidMount() {\r\n\r\n        setTimeout(() => {\r\n            if (typeof localStorage.getItem(\"contest\") !== undefined) {\r\n                this.setState({ isLoaded: true });\r\n                console.log(\"changeState\");\r\n            } else {\r\n                this.handler();\r\n            }\r\n        }, 5000)\r\n    }\r\n    render() {\r\n        let redirect = () => {\r\n\r\n            if (this.state.isLoaded === true) {\r\n                console.log(\"redirecy\");\r\n                return (<Redirect to=\"/0/task/1\" from=\"/loader\" />);\r\n            }\r\n            else {\r\n                this.handler();\r\n                console.log(\"not redirect\");\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                {redirect()}\r\n                <div class=\"item-1\"><div></div></div>\r\n                <div class=\"item-2\"><div></div></div>\r\n                <div class=\"item-3\"><div></div></div>\r\n                <div class=\"item-4\"><div></div></div>\r\n                <div class=\"item-5\"><div></div></div>\r\n                <div class=\"item-6\"><div></div></div>\r\n                <div class=\"item-7\"><div></div></div>\r\n                <div class=\"item-8\"><div></div></div>\r\n                <div class=\"item-9\"><div></div></div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Loading;","import './App.css';\r\nimport './style/high_gen.css';\r\nimport React from 'react';\r\nimport { Route, BrowserRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport Auth from './components/high_gen/Auth';\r\nimport Main from './components/high_gen/Main';\r\nimport Header from './components/high_gen/Header';\r\nimport Footer from './components/high_gen/Footer';\r\nimport Loader from './components/static/Loading';\r\n\r\n//import { state } from './components/static/Requests';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      server: \"http://139.162.141.55:8000\",\r\n      token: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"content-page\">\r\n          <BrowserRouter>\r\n            <Route\r\n              path='/auth'\r\n              render={() =>\r\n                <Auth sendPost={this.props.sendPost} />} />\r\n\r\n            <Redirect to='/auth' from = \"/alt_nti\"/>\r\n            \r\n            <Route\r\n              path='/loader'\r\n              render={() =>\r\n                <Loader />} />\r\n          \r\n            <Route\r\n              path='/0'\r\n              render={() =>\r\n                <Main sendGet={this.props.sendGet}/>} />\r\n          </BrowserRouter>\r\n        </div>\r\n              <Footer />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {sendGet, sendPost} from './components/static/Requests'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App sendGet={sendGet} sendPost={sendPost} />, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}